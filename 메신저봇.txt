const scriptName = "봇1";

function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {
    // FastAPI 서버 기본 주소
    var baseUrl = "http://192.168.0.133:8080";
    
    // 공통 변수 선언
    var payload = { text: msg };
    var payloadJson = JSON.stringify(payload);
    var responseText = null;
    
    // 1) 번역 요청 감지 ('$번역' 키워드로 시작하는지 확인)
    if (msg.trim().startsWith('$번역')) {
        // 번역 요청 처리
        var apiUrl = baseUrl + "/process-message";
        
        try {
            responseText = postToFastAPI(apiUrl, payloadJson);
        } catch (e) {
            // 네트워크/Jsoup 요청 중 예외가 발생하면 무응답
            return;
        }
        
        // 응답 파싱
        if (responseText) {
            var json;
            try {
                json = JSON.parse(responseText);
            } catch (e) {
                // JSON 파싱 오류도 무응답 처리
                return;
            }
            
            // 번역 결과 추출
            var translation = json.translation;
            
            // 번역 결과가 없으면 무응답
            if (!translation) {
                return;
            }
            
            // 번역 결과 전송
            replier.reply(translation);
        }
    }
    // 2) URL 감지
    else {
        var url = extractUrl(msg);
        if (url) {
            // URL 요약 처리
            var apiUrl = baseUrl + "/process-message";
            
            try {
                responseText = postToFastAPI(apiUrl, payloadJson);
            } catch (e) {
                // 네트워크/Jsoup 요청 중 예외가 발생하면 무응답
                return;
            }
            
            // 응답 파싱
            if (responseText) {
                var json;
                try {
                    json = JSON.parse(responseText);
                } catch (e) {
                    // JSON 파싱 오류도 무응답 처리
                    return;
                }
                
                // headline, gemini_summary 추출
                var headline = json.headline;
                var summary = json.gemini_summary;
                
                // 둘 다 null이면 무응답
                if (headline === null && summary === null) {
                    return; 
                }
                
                // 요약 결과 전송
                headline = headline || "제목 없음";
                summary = summary || "요약 내용 없음";
                
                replier.reply(summary);
            }
        }
    }
}

// URL 추출 함수
function extractUrl(text) {
    var urlRegex = /https?:\/\/(?:[-\w.]|(?:%[\da-fA-F]{2}))+[^\s]*/g;
    var match = text.match(urlRegex);
    return (match && match.length > 0) ? match[0] : null;
}

// POST 요청 함수
function postToFastAPI(url, payloadJson) {
    try {
        var Jsoup = org.jsoup.Jsoup;
        var conn = Jsoup.connect(url)
            .ignoreContentType(true)
            .header("Content-Type", "application/json")
            .requestBody(payloadJson)
            .timeout(15 * 1000)
            .post();
        
        // 서버에서 받은 본문(JSON 문자열)
        return conn.body().text();

    } catch (e) {
        // 오류 발생 시 무응답 처리를 위해
        // headline, gemini_summary를 null로 설정
        return JSON.stringify({
            "headline": null,
            "gemini_summary": null
        });
    }
}


// 아래 메서드는 액티비티 화면을 수정할 때 사용 (제공됨)
function onCreate(savedInstanceState, activity) {
    var textView = new android.widget.TextView(activity);
    textView.setText("URL 요약 및 번역 봇이 실행 중입니다!");
    textView.setTextColor(android.graphics.Color.DKGRAY);
    activity.setContentView(textView);
}
function onStart(activity) {}
function onResume(activity) {}
function onPause(activity) {}
function onStop(activity) {}
